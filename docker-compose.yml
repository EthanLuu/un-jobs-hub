version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: unjobs-postgres
    environment:
      POSTGRES_USER: unjobs
      POSTGRES_PASSWORD: unjobs123
      POSTGRES_DB: unjobs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unjobs"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: unjobs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: unjobs-backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://unjobs:unjobs123@postgres:5432/unjobs
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: unjobs-celery
    environment:
      DATABASE_URL: postgresql://unjobs:unjobs123@postgres:5432/unjobs
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    command: celery -A celery_app worker --loglevel=info

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: unjobs-celery-beat
    environment:
      DATABASE_URL: postgresql://unjobs:unjobs123@postgres:5432/unjobs
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    command: celery -A celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data:



